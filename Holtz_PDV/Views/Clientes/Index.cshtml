@model ReflectionIT.Mvc.Paging.PagingList<Holtz_PDV.Models.Cliente>
@using ReflectionIT.Mvc.Paging
@addTagHelper *,ReflectionIT.Mvc.Paging
@{
    ViewData["Title"] = "Listagem de Clientes";
}

<h2>@ViewData["Title"]</h2>
<p>
    <a asp-action="Create" class="btn btn-info">Novo</a>
</p>


<table class="table table-striped table-hover">
    <thead>
        <tr class="text-uppercase bg-info">
            <th>
                Código
            </th>
            <th>
                Nome/Razão
            </th>
            <th>
                CPF/CNPJ
            </th>
            <th>
                Cidade
            </th>
            <th></th> <!-- Para criar uma titulo vazio para as funções editar, excluir etc -->
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr class="text-uppercase">
                <td>
                    @Html.DisplayFor(modelItem => item.CliCod)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.CliRaz)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.CliCpfCnpj)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Cidade.CidNom)
                </td>
                <td>
                    <a asp-action="Edit" asp-route-id="@item.CliCod" class="btn btn-primary btn-sm">Editar</a>
                    <a asp-action="Details" asp-route-id="@item.CliCod" class="btn btn-light btn-sm">Detalhes</a>
                    <a asp-action="Delete" asp-route-id="@item.CliCod" class="btn btn-danger btn-sm">Remover</a>
                </td>
            </tr>
        }
    </tbody>
</table>

<nav aria-label="Cliente Paging">
    @await this.Component.InvokeAsync("Pager", new { pagingList = this.Model })
</nav>